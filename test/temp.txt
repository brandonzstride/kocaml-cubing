original:
100101101100 is inverted properly
on f:
100100101000 is inverted properly
of f in coord:
110101100100

so UF accidentally gets flip
Df should be flipped but doesn't
FR accidentally gets flip
FL should get flipped but doesn't get flipped

I checked that when I do of and to perm, then move, then of and to perm again,
it's same as from move on coord.

So it might have to do with the order of ops and 

Issue seems to be that what gets flipped depends on where the piece is coming
from. I'm not sure how I can invert the correct cubies without knowing where
they are coming from. Maybe I have to do it first. But this goes against order
of ops. But in a cubie if I apply all the static stuff first (e.g. flipping some)
things, they'll come out flipped correctly.

Goal of applying a move to a ori coordinate is this:
* Note the current orientiation of the cubies *in each position*
* As moves currently are, this orientation is dependent on initial orientation
* But we want the oris to just be what they really are
  * This is effectively done when calling it with ori zero, but maybe not
  * because the orientation is added to the piece that its coming from, I think
    and not the piece that is really there.
  * So indeed it will be helpful to make a move not consider initial orientation at
    all and just return a change in orientation.

I'm not totally confident that this will fix it, but it will be a little smoother
as it relates to Kociemba's code.